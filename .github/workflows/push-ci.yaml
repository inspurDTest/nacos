name: PUSH-CI

on:
  push:
    branches: [master, develop, v1.x-develop, 2.3.2]

permissions:
  contents: read

concurrency:
  group: nacos-${{ github.ref }}

env:
  DOCKER_REPO: registry.cn-hangzhou.aliyuncs.com/nacos-wyd/nacos
  DOCKER_REPO_B: registry.cn-hangzhou.aliyuncs.com/nacos-wyd/nacos
  TEST_REPO_NAME: nacos-group/nacos-e2e
  PASSWORD: ${{ secrets.PASSWORD_ALI }}
  USERNAME: ${{ secrets.USERNAME_ALI }}
jobs:
  dist-tar:
    name: Build dist tar
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "8"
          cache: "maven"
      - name: Build distribution tar
        run: |
          mvn -Prelease-nacos -DskipTests clean install -U -e -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - uses: actions/upload-artifact@v3
        name: Upload distribution tar
        with:
          name: nacos
          path: distribution/target/nacos-server-*.tar.gz

  docker:
    if: ${{ success() }}
    name: Docker images
    needs: [dist-tar]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOCKERHUB_USER_ACTUAL: ${{ secrets.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN_ACTUAL: ${{ secrets.DOCKERHUB_TOKEN }}
    strategy:
      matrix:
        base-image: ["centos"]
        java-version: ["8"]
        arch: ["amd64", "arm64"]
    outputs:
      version-json: ${{ steps.show_versions.outputs.version-json }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: inspurDTest/nacos-e2e.git
          ref: main
          path: nacos-e2e
      - uses: actions/download-artifact@v3
        name: Download distribution tar
        with:
          name: nacos
          path: ./
      - name: Generate image tag
        id: build-images
        run: |
          mv nacos-server-*.tar.gz nacos-e2e/cicd/build/
          cd nacos-e2e/cicd/build
          version=${{ github.event.pull_request.number || github.ref_name }}-$(uuidgen)
          mkdir versionlist
          touch versionlist/"${version}-`echo ${{ matrix.java-version }} | sed -e "s/:/-/g"`"
          ls versionlist/
          echo TAG=${version}-$(echo ${{ matrix.java-version }} | sed -e "s/:/-/g") >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up Docker
        run: |
          curl -fsSL https://get.docker.com | sh
          sudo usermod -aG docker $USER
          sudo service docker start
          docker --version
      - name: Login to Docker
        run: |
           docker login --username=${{ secrets.USERNAME_ALI }} registry.cn-hangzhou.aliyuncs.com -p ${{ secrets.PASSWORD_ALI }}
      - name: save docker_1 images
        run: |
          mkdir build_backup
          cp -rf nacos-e2e/cicd/build/* ./build_backup/
          cd nacos-e2e/cicd/build
          docker buildx create --use
          docker buildx build --no-cache  --platform linux/${{ matrix.arch }} -f Dockerfile -t ${DOCKER_REPO}:2.3.2-${{ matrix.arch }} --push .
      - name: Show versions
        id: show_versions
        run: | 
          a=(`ls nacos-e2e/cicd/build/versionlist`)
          printf '%s\n' "${a[@]}" | jq -R . | jq -s .
          echo version-json=`printf '%s\n' "${a[@]}" | jq -R . | jq -s .` >> $GITHUB_OUTPUT
